{"ast":null,"code":"import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{Bar}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);export default function BarChart(_ref){var label=_ref.label,dataenergy=_ref.dataenergy,datasolar=_ref.datasolar;var option={responsive:true,scales:{x:{stacked:true},y:{stacked:true}}};var data={labels:label.split(','),datasets:[{label:'# of Energy',data:dataenergy.split(','),backgroundColor:['rgba(255, 206, 86, 0.2)'],borderWidth:1},{label:'# of Solarcell',data:datasolar.split(','),backgroundColor:['rgba(255, 206, 86, 1)'],borderWidth:1}]};return/*#__PURE__*/_jsx(Bar,{data:data,options:option});}","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsx","_jsx","register","BarChart","_ref","label","dataenergy","datasolar","option","responsive","scales","x","stacked","y","data","labels","split","datasets","backgroundColor","borderWidth","options"],"sources":["/Users/net/Documents/Work/Digital twin/React/client/src/components/chart/bar.jsx"],"sourcesContent":["import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js'\nimport { Bar } from 'react-chartjs-2'\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nexport default function BarChart({ label, dataenergy, datasolar }) {\n    const option = {\n        responsive: true,\n        scales: {\n            x: {\n                stacked: true,\n            },\n            y: {\n                stacked: true,\n            },\n        },\n    };\n\n\n    const data = {\n        labels: label.split(','),\n        datasets: [{\n            label: '# of Energy',\n            data: dataenergy.split(','),\n            backgroundColor: [\n                'rgba(255, 206, 86, 0.2)',\n            ],\n            borderWidth: 1\n        }, {\n            label: '# of Solarcell',\n            data: datasolar.split(','),\n            backgroundColor: [\n                'rgba(255, 206, 86, 1)',\n            ],\n            borderWidth: 1\n        }]\n    }\n    return (\n        <Bar data={data} options={option} />\n    )\n}"],"mappings":"AAAA,OAASA,KAAK,GAAI,CAAAC,OAAO,CAAEC,aAAa,CAAEC,WAAW,CAAEC,UAAU,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CAC3G,OAASC,GAAG,KAAQ,iBAAiB,QAAAC,GAAA,IAAAC,IAAA,yBAErCT,OAAO,CAACU,QAAQ,CAACT,aAAa,CAAEC,WAAW,CAAEC,UAAU,CAAEC,KAAK,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAEhF,cAAe,SAAS,CAAAK,QAAQA,CAAAC,IAAA,CAAmC,IAAhC,CAAAC,KAAK,CAAAD,IAAA,CAALC,KAAK,CAAEC,UAAU,CAAAF,IAAA,CAAVE,UAAU,CAAEC,SAAS,CAAAH,IAAA,CAATG,SAAS,CAC3D,GAAM,CAAAC,MAAM,CAAG,CACXC,UAAU,CAAE,IAAI,CAChBC,MAAM,CAAE,CACJC,CAAC,CAAE,CACCC,OAAO,CAAE,IACb,CAAC,CACDC,CAAC,CAAE,CACCD,OAAO,CAAE,IACb,CACJ,CACJ,CAAC,CAGD,GAAM,CAAAE,IAAI,CAAG,CACTC,MAAM,CAAEV,KAAK,CAACW,KAAK,CAAC,GAAG,CAAC,CACxBC,QAAQ,CAAE,CAAC,CACPZ,KAAK,CAAE,aAAa,CACpBS,IAAI,CAAER,UAAU,CAACU,KAAK,CAAC,GAAG,CAAC,CAC3BE,eAAe,CAAE,CACb,yBAAyB,CAC5B,CACDC,WAAW,CAAE,CACjB,CAAC,CAAE,CACCd,KAAK,CAAE,gBAAgB,CACvBS,IAAI,CAAEP,SAAS,CAACS,KAAK,CAAC,GAAG,CAAC,CAC1BE,eAAe,CAAE,CACb,uBAAuB,CAC1B,CACDC,WAAW,CAAE,CACjB,CAAC,CACL,CAAC,CACD,mBACIlB,IAAA,CAACF,GAAG,EAACe,IAAI,CAAEA,IAAK,CAACM,OAAO,CAAEZ,MAAO,CAAE,CAAC,CAE5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}