{"ast":null,"code":"var _jsxFileName = \"/Users/net/Documents/Work/Digital twin/React/client/src/components/chart/bar.jsx\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nexport default function BarChart(_ref) {\n  let {\n    label,\n    dataenergy,\n    datasolar\n  } = _ref;\n  const option = {\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true\n      }\n    }\n  };\n  const data = {\n    labels: label.split(','),\n    datasets: [{\n      label: '# of Energy',\n      data: dataenergy.split(','),\n      backgroundColor: ['rgba(255, 206, 86, 0.2)'],\n      borderWidth: 1\n    }, {\n      label: '# of Solarcell',\n      data: datasolar.split(','),\n      backgroundColor: ['rgba(255, 206, 86, 1)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: data,\n    options: option\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_c = BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","BarChart","_ref","label","dataenergy","datasolar","option","responsive","scales","x","stacked","y","data","labels","split","datasets","backgroundColor","borderWidth","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/net/Documents/Work/Digital twin/React/client/src/components/chart/bar.jsx"],"sourcesContent":["import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js'\nimport { Bar } from 'react-chartjs-2'\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nexport default function BarChart({ label, dataenergy, datasolar }) {\n    const option = {\n        responsive: true,\n        scales: {\n            x: {\n                stacked: true,\n            },\n            y: {\n                stacked: true,\n            },\n        },\n    };\n\n\n    const data = {\n        labels: label.split(','),\n        datasets: [{\n            label: '# of Energy',\n            data: dataenergy.split(','),\n            backgroundColor: [\n                'rgba(255, 206, 86, 0.2)',\n            ],\n            borderWidth: 1\n        }, {\n            label: '# of Solarcell',\n            data: datasolar.split(','),\n            backgroundColor: [\n                'rgba(255, 206, 86, 1)',\n            ],\n            borderWidth: 1\n        }]\n    }\n    return (\n        <Bar data={data} options={option} />\n    )\n}"],"mappings":";AAAA,SAASA,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAC3G,SAASC,GAAG,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErCT,OAAO,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,eAAe,SAASK,QAAQA,CAAAC,IAAA,EAAmC;EAAA,IAAlC;IAAEC,KAAK;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAAH,IAAA;EAC7D,MAAMI,MAAM,GAAG;IACXC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,OAAO,EAAE;MACb,CAAC;MACDC,CAAC,EAAE;QACCD,OAAO,EAAE;MACb;IACJ;EACJ,CAAC;EAGD,MAAME,IAAI,GAAG;IACTC,MAAM,EAAEV,KAAK,CAACW,KAAK,CAAC,GAAG,CAAC;IACxBC,QAAQ,EAAE,CAAC;MACPZ,KAAK,EAAE,aAAa;MACpBS,IAAI,EAAER,UAAU,CAACU,KAAK,CAAC,GAAG,CAAC;MAC3BE,eAAe,EAAE,CACb,yBAAyB,CAC5B;MACDC,WAAW,EAAE;IACjB,CAAC,EAAE;MACCd,KAAK,EAAE,gBAAgB;MACvBS,IAAI,EAAEP,SAAS,CAACS,KAAK,CAAC,GAAG,CAAC;MAC1BE,eAAe,EAAE,CACb,uBAAuB,CAC1B;MACDC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC;EACD,oBACIlB,OAAA,CAACF,GAAG;IAACe,IAAI,EAAEA,IAAK;IAACM,OAAO,EAAEZ;EAAO;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE5C;AAACC,EAAA,GAnCuBtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}