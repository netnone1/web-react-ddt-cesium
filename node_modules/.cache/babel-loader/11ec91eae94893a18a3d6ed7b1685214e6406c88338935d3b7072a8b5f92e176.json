{"ast":null,"code":"var _jsxFileName = \"/Users/net/Documents/Work/Digital twin/React/client/src/components/chart/donghnut.jsx\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nexport default function DoughnutChart(_ref) {\n  let {\n    label,\n    data\n  } = _ref;\n  const datas = {\n    labels: label.split(','),\n    datasets: [{\n      label: '% of Space',\n      data: data.split(','),\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: datas\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c = DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","jsxDEV","_jsxDEV","register","DoughnutChart","_ref","label","data","datas","labels","split","datasets","backgroundColor","borderWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/net/Documents/Work/Digital twin/React/client/src/components/chart/donghnut.jsx"],"sourcesContent":["import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default function DoughnutChart({ label, data }) {\n    const datas = {\n        labels: label.split(','),\n        datasets: [\n            {\n                label: '% of Space',\n                data: data.split(','),\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                ],\n                borderWidth: 1,\n            },\n        ],\n    };\n    return (\n        <Doughnut data={datas} />\n    )\n}"],"mappings":";AAAA,SAASA,KAAK,IAAIC,OAAO,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACxE,SAASC,QAAQ,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3CN,OAAO,CAACO,QAAQ,CAACN,UAAU,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAE7C,eAAe,SAASK,aAAaA,CAAAC,IAAA,EAAkB;EAAA,IAAjB;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACjD,MAAMG,KAAK,GAAG;IACVC,MAAM,EAAEH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC;IACxBC,QAAQ,EAAE,CACN;MACIL,KAAK,EAAE,YAAY;MACnBC,IAAI,EAAEA,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;MACrBE,eAAe,EAAE,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,CAC5B;MACDC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EACD,oBACIX,OAAA,CAACF,QAAQ;IAACO,IAAI,EAAEC;EAAM;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEjC;AAACC,EAAA,GAtBuBd,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}